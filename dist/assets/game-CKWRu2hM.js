import{a as M,b as B,c as T}from"./supabase-D4yKC73f.js";let p={},m={},x={},r="mildmode",g=null;const d=document.getElementById("topic-card"),a=document.getElementById("topic-text"),y=Array.from(document.querySelectorAll(".category-selector")),i=["mildmode","ontheedge","intense","surprise"],v={surprise:"盲盒 Surprise Me",intense:"加麻加辣 Intense",ontheedge:"微辣 On the Edge",mildmode:"清汤 Mild Mode"},u={surprise:{mainCardColor:"bg-[#FFC9DC]",mainCardTextColor:"text-black"},intense:{mainCardColor:"bg-[#B8B4FF]",mainCardTextColor:"text-black"},ontheedge:{mainCardColor:"bg-[#A0E7E5]",mainCardTextColor:"text-black"},mildmode:{mainCardColor:"bg-[#C8FD0B]",mainCardTextColor:"text-black"}},I={surprise:{left:"calc(50% - 175px)"},intense:{left:"calc(50% - 175px)"},ontheedge:{left:"calc(50% - 175px)"},mildmode:{left:"calc(50% - 175px)"}};y.forEach(t=>{const e=t.dataset.categoryId;t.style.left=I[e].left});async function k(){try{console.log("Loading game data from database...");const t=performance.now();if(g=await M("drinking-topics"),!g)throw new Error("Game not found with category_tag: drinking-topics");console.log("Game data loaded:",g);const e=Object.keys(v).map(async n=>{console.log(`Loading card IDs for category: ${n}`);const s=await B(g.id,n);return console.log(`Loaded ${s.length} card IDs for ${n}`),p[n]=s,m[n]=[...s],x[n]=[],{categoryId:n,count:s.length}}),c=await Promise.all(e),o=performance.now()-t;console.log(`All card IDs loaded in ${o.toFixed(2)}ms:`,c),document.getElementById("loadingState").style.display="none",document.getElementById("gameContainer").style.display="flex",f(r)}catch(t){console.error("Error loading game data:",t),document.getElementById("loadingState").style.display="none",document.getElementById("errorState").style.display="block"}}function D(t){p[t]&&(m[t]=[...p[t]],x[t]=[])}async function Y(t){if(!m[t]||m[t].length===0)return null;const e=Math.floor(Math.random()*m[t].length),c=m[t][e];m[t].splice(e,1),x[t].push(c);try{return await T(c)}catch(o){return console.error("Error fetching card by ID:",o),null}}async function E(){if(!p[r]){a.textContent="话题数据未加载或类型不存在。";return}a.classList.remove("topic-fade-in"),a.classList.add("topic-fade-out"),setTimeout(async()=>{try{const t=await Y(r);if(t===null){F();return}a.textContent=t.content,a.classList.remove("topic-fade-out"),a.classList.add("topic-fade-in")}catch(t){console.error("Error displaying new topic:",t),a.textContent="加载话题失败，请重试",a.classList.remove("topic-fade-out"),a.classList.add("topic-fade-in")}},300)}function F(){const t=document.getElementById("completionModal"),e=document.getElementById("completedCount"),c=document.getElementById("currentCategoryName");e.textContent=p[r].length,c.textContent=v[r],t.classList.add("active"),document.body.style.overflow="hidden"}window.closeCompletionModal=function(){document.getElementById("completionModal").classList.remove("active"),document.body.style.overflow=""};window.restartCategory=function(){D(r),closeCompletionModal(),a.classList.remove("topic-fade-in"),a.classList.add("topic-fade-out"),setTimeout(()=>{a.textContent="点击卡片开始新一轮",a.classList.remove("topic-fade-out"),a.classList.add("topic-fade-in")},300)};function S(){if(!u[r]){console.warn("Current category data is not available.");return}const t=u[r];for(const e in u)u.hasOwnProperty(e)&&d.classList.remove(u[e].mainCardColor,u[e].mainCardTextColor);d.classList.add(t.mainCardColor,t.mainCardTextColor)}function f(t){r=t,S(),a.classList.remove("topic-fade-in"),a.classList.add("topic-fade-out"),setTimeout(()=>{a.textContent="点击卡片开始",a.classList.remove("topic-fade-out"),a.classList.add("topic-fade-in")},300);const e=y.find(o=>o.dataset.categoryId===t),c=i.filter(o=>o!==t).map(o=>y.find(n=>n.dataset.categoryId===o));e&&(e.style.transform="translateY(0px) scale(1)",e.style.zIndex=50,e.style.opacity=1),c.forEach((o,n)=>{if(o){const s=n+1,L=-20,b=.05,w=.15;o.style.transform=`translateY(${s*L}px) scale(${1-s*b})`,o.style.zIndex=40-s*10,o.style.opacity=Math.max(.3,1-s*w)}})}window.goBack=function(){window.location.href="index.html"};d.addEventListener("click",t=>{t.target.closest(".category-selector")||E()});let C=0,h=0,l=!1;d.addEventListener("touchstart",t=>{C=t.touches[0].clientX,h=t.touches[0].clientY,l=!0});d.addEventListener("touchmove",t=>{l&&t.preventDefault()});d.addEventListener("touchend",t=>{if(!l)return;l=!1;const e=t.changedTouches[0].clientX,c=t.changedTouches[0].clientY,o=e-C,n=c-h;if(Math.abs(o)>Math.abs(n)&&Math.abs(o)>50){const s=i.indexOf(r);o>0&&s>0?f(i[s-1]):o<0&&s<i.length-1&&f(i[s+1])}else Math.abs(n)<30&&Math.abs(o)<30&&E()});d.addEventListener("mousedown",t=>{C=t.clientX,h=t.clientY,l=!0});d.addEventListener("mousemove",t=>{l&&t.preventDefault()});d.addEventListener("mouseup",t=>{if(!l)return;l=!1;const e=t.clientX-C,c=t.clientY-h;if(Math.abs(e)>Math.abs(c)&&Math.abs(e)>50){const o=i.indexOf(r);e>0&&o>0?f(i[o-1]):e<0&&o<i.length-1&&f(i[o+1])}else Math.abs(c)<30&&Math.abs(e)<30&&E()});y.forEach(t=>{t.addEventListener("click",e=>{e.stopPropagation(),f(t.dataset.categoryId)})});document.getElementById("completionModal").addEventListener("click",function(t){t.target===this&&closeCompletionModal()});document.addEventListener("keydown",function(t){t.key==="Escape"&&closeCompletionModal()});k();
